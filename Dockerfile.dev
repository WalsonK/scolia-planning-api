# Dockerfile pour le d√©veloppement local
FROM rust:1.88-slim

# Installer Python et les d√©pendances syst√®me
RUN apt-get update && apt-get install -y \
    python3 \
    python3-pip \
    python3-venv \
    curl \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Cr√©er le r√©pertoire de travail
WORKDIR /app

# Copier tous les fichiers du projet
COPY . .

# Script pour compiler Rust et lancer FastAPI
COPY <<'EOF' /app/start.sh
#!/bin/bash
set -e

echo "üîß Compilation de la biblioth√®que Rust..."
cd /app/libs/rustlib
cargo build --release

echo "üìÅ Copie des biblioth√®ques compil√©es..."
# Copier les fichiers selon l'OS
if [ -f "target/release/librustlib.so" ]; then
    cp target/release/librustlib.so ../librustlib.so
    echo "‚úÖ Biblioth√®que Linux copi√©e"
elif [ -f "target/release/librustlib.dylib" ]; then
    cp target/release/librustlib.dylib ../librustlib.dylib
    echo "‚úÖ Biblioth√®que macOS copi√©e"
elif [ -f "target/release/rustlib.dll" ]; then
    cp target/release/rustlib.dll ../librustml.dll
    echo "‚úÖ Biblioth√®que Windows copi√©e"
else
    echo "‚ùå Aucune biblioth√®que trouv√©e"
    exit 1
fi

cd /app

echo "üì¶ Installation des d√©pendances Python..."
pip3 install -r requirements.txt

echo "üöÄ Lancement de l'API FastAPI..."
uvicorn main:app --host 0.0.0.0 --port 8000
EOF

RUN chmod +x /app/start.sh

# Exposer le port
EXPOSE 8000

# Commande par d√©faut
CMD ["/app/start.sh"]
